apply plugin: 'com.android.application'
apply plugin: 'walle'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.lin.walle"
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        flavorDimensions "1"
    }

    signingConfigs {
        Blackbox {
            keyAlias 'Blackbox'
            keyPassword '20130612'
            storeFile file('../blackbox.jks')
            storePassword '20130612'
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.Blackbox
        }
    }

    /**
     * 使用productFlavors后
     * 版本构建由gradlew clean assembleReleaseChannels改为gradlew clean assembleChannel1ReleaseChannels
     */
    productFlavors {
        /**
         * 指定渠道为：Channel1 渠道内容为：美团
         * gradlew clean assembleChannel1ReleaseChannels -PchannelList=meituan
         */
        channel1{
            buildConfigField "String", "channel", '"intercon1"'
            manifestPlaceholders = [
                    ic_app: "@mipmap/icon_1"
            ]
        }
        channel2{
            buildConfigField "String", "channel", '"intercon2"'
            manifestPlaceholders = [
                    ic_app: "@mipmap/icon_2"
            ]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.meituan.android.walle:library:1.1.6'
}

//https://github.com/Meituan-Dianping/walle
//https://github.com/Meituan-Dianping/walle/blob/master/walle-cli/README.md
walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'
    // 渠道配置文件
//    channelFile = new File("D:/External/WalleApplication/channel")
//    print("${project.getProjectDir()}")   //D:\External\WalleApplication\app
//    channelFile = new File("${project.getProjectDir()}/channel")

    // 渠道&额外信息配置文件，与channelFile互斥  都存在时configFile优先执行
//    configFile = new File("D:/External/WalleApplication/config.json")
//    print("${project.getProjectDir()}")   //D:\External\WalleApplication\app
    configFile = new File("${project.getProjectDir()}/config.json")

    /**
     * 执行walle-cli命令
     * 查看渠道信息
     * java -jar walle-cli-all.jar show app\build\outputs\channels\app-com.lin.walle-360cn-release-v1.0-1-20180423-105856.apk
     * 写入渠道 生成app-release_meituan.apk文件
     * java -jar walle-cli-all.jar put -c meituan app\build\outputs\apk\release\app-release.apk
     * 写入渠道和额外信息
     * java -jar walle-cli-all.jar put -c meituan -e buildtime=20161212,hash=xxxxxxx app\build\outputs\apk\release\app-release.apk
     * 指定输出文件
     * java -jar walle-cli-all.jar put -c meituan app\build\outputs\apk\release\app-release.apk app\build\outputs\apk\release\app-release111.apk
     */
}